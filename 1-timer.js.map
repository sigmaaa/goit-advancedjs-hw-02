{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateInput = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst day = document.querySelector('[data-days]');\nconst hour = document.querySelector('[data-hours]');\nconst min = document.querySelector('[data-minutes]');\nconst sec = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\nlet choosenDate = new Date();\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    choosenDate = selectedDates[0];\n    if (choosenDate < new Date()) {\n      startButton.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future!',\n        position: 'topCenter',\n        color: 'red',\n      });\n    } else {\n      startButton.disabled = false;\n      iziToast.show({\n        title: 'Success',\n        message: 'Timer is ready',\n        position: 'topCenter',\n        color: 'green',\n      });\n    }\n  },\n};\n\nstartButton.addEventListener('click', event => {\n  startButton.disabled = true;\n  const timerId = setInterval(() => {\n    const timeDifference = choosenDate - new Date();\n    const { days, hours, minutes, seconds } = convertMs(timeDifference);\n    if (timeDifference <= 0) {\n      clearInterval(timerId);\n      return;\n    }\n    day.textContent = addLeadingZero(days);\n    hour.textContent = addLeadingZero(hours);\n    min.textContent = addLeadingZero(minutes);\n    sec.textContent = addLeadingZero(seconds);\n  }, 1000);\n});\n\nflatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return `${value}`.padStart(2, '0');\n}\n"],"names":["dateInput","startButton","day","hour","min","sec","choosenDate","options","selectedDates","iziToast","event","timerId","timeDifference","days","hours","minutes","seconds","convertMs","addLeadingZero","flatpickr","ms","value"],"mappings":"sGAQA,MAAMA,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAM,SAAS,cAAc,aAAa,EAC1CC,EAAO,SAAS,cAAc,cAAc,EAC5CC,EAAM,SAAS,cAAc,gBAAgB,EAC7CC,EAAM,SAAS,cAAc,gBAAgB,EAEnDJ,EAAY,SAAW,GACvB,IAAIK,EAAc,IAAI,KACtB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAcE,EAAc,CAAC,EACzBF,EAAc,IAAI,MACpBL,EAAY,SAAW,GACvBQ,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,sCACT,SAAU,YACV,MAAO,KACf,CAAO,IAEDR,EAAY,SAAW,GACvBQ,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,iBACT,SAAU,YACV,MAAO,OACf,CAAO,EAEJ,CACH,EAEAR,EAAY,iBAAiB,QAASS,GAAS,CAC7CT,EAAY,SAAW,GACvB,MAAMU,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAiBN,EAAc,IAAI,KACnC,CAAE,KAAAO,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUL,CAAc,EAClE,GAAIA,GAAkB,EAAG,CACvB,cAAcD,CAAO,EACrB,MACD,CACDT,EAAI,YAAcgB,EAAeL,CAAI,EACrCV,EAAK,YAAce,EAAeJ,CAAK,EACvCV,EAAI,YAAcc,EAAeH,CAAO,EACxCV,EAAI,YAAca,EAAeF,CAAO,CACzC,EAAE,GAAI,CACT,CAAC,EAEDG,EAAUnB,EAAWO,CAAO,EAE5B,SAASU,EAAUG,EAAI,CAQrB,MAAMP,EAAO,KAAK,MAAMO,EAAK,KAAG,EAE1BN,EAAQ,KAAK,MAAOM,EAAK,MAAO,IAAI,EAEpCL,EAAU,KAAK,MAAQK,EAAK,MAAO,KAAQ,GAAM,EAEjDJ,EAAU,KAAK,MAASI,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASE,EAAeG,EAAO,CAC7B,MAAO,GAAGA,CAAK,GAAG,SAAS,EAAG,GAAG,CACnC"}